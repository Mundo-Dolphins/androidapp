name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build, static analysis and tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Load Google Service file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          set -euo pipefail
          if [ -z "${DATA:-}" ]; then
            echo "No GOOGLE_SERVICES_JSON secret provided; skipping."
          else
            mkdir -p app
            # Try to decode as base64; if decoding succeeds, inspect decoded content
            if printf '%s' "$DATA" | base64 --decode >/tmp/gs_decoded 2>/dev/null; then
              # Check if decoded content looks like JSON (starts with { or [)
              first_char=$(head -c 1 /tmp/gs_decoded || true)
              if [ "$first_char" = "{" ] || [ "$first_char" = "[" ]; then
                echo "Detected base64-encoded JSON -> writing decoded file"
                mv /tmp/gs_decoded app/google-services.json
              else
                echo "Decoded content does not look like JSON; writing raw secret instead"
                rm -f /tmp/gs_decoded
                printf '%s' "$DATA" > app/google-services.json
              fi
            else
              # Not valid base64: write raw content (handles multiline JSON secrets)
              echo "Secret not base64 -> writing raw content"
              printf '%s' "$DATA" > app/google-services.json
            fi
            echo "Wrote app/google-services.json (size: $(wc -c < app/google-services.json) bytes)"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ktlint checks
        # Run ktlint static checks via Gradle task in the app module.
        run: ./gradlew :app:ktlintCheck --no-daemon --console=plain --info --stacktrace
        continue-on-error: true

      - name: Run detekt static analysis
        # Run detekt via Gradle in the app module.
        run: ./gradlew :app:detekt --no-daemon --console=plain --info --stacktrace
        continue-on-error: true

      - name: Build debug APK (assemble)
        run: |
          ./gradlew assembleDebug --no-daemon --console=plain --info --stacktrace

      - name: Run unit tests (app)
        run: |
          ./gradlew clean :app:testDebugUnitTest --no-daemon --console=plain --info --stacktrace

      - name: Upload unit test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-unit-test-report
          path: app/build/reports/tests/testDebugUnitTest

      - name: Upload unit test results (xml)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-unit-test-results-xml
          path: app/build/test-results/testDebugUnitTest

      - name: Upload static analysis reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: |
            app/build/reports/detekt
            app/build/reports/ktlint

      - name: Print test summary
        if: always()
        run: |
          echo "Artifacts: app-unit-test-report, app-unit-test-results-xml, static-analysis-reports"
